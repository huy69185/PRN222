@model List<ClassroomBooking.Service.Dtos.BookingDto>
@{
    ViewData["Title"] = "My Bookings";
}

<!-- Thêm style tùy chỉnh cho dropdown -->
<style>
    select[name="statusFilter"] option {
        color: black; /* Màu mặc định */
    }

        select[name="statusFilter"] option[value="Approved"] {
            color: #198754; /* Màu xanh theo Bootstrap text-success */
            font-weight: bold;
        }

        select[name="statusFilter"] option[value="Denied"] {
            color: #dc3545; /* Màu đỏ theo Bootstrap text-danger */
            font-weight: bold;
        }

        select[name="statusFilter"] option[value="Pending"] {
            color: #ffc107; /* Màu vàng theo Bootstrap text-warning */
            font-weight: bold;
        }

        select[name="statusFilter"] option[value="Cancelled"] {
            color: orange; /* Màu cam theo yêu cầu */
            font-weight: bold;
        }
</style>

<div class="container mt-5">
    <h2 class="mb-4 text-primary">
        <i class="bi bi-bookmark-fill me-2"></i>My Bookings
    </h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <form method="get" class="d-flex gap-3">
            <input type="text" name="searchRoom" value="@ViewBag.SearchRoom" placeholder="Search by room..." class="form-control shadow-sm" style="max-width: 200px;" />
            <input type="text" name="searchPurpose" value="@ViewBag.SearchPurpose" placeholder="Search by purpose..." class="form-control shadow-sm" style="max-width: 200px;" />
            <select name="statusFilter" class="form-select shadow-sm" style="max-width: 150px;">
                <option value="">All Status</option>
                <option value="Approved" @(ViewBag.StatusFilter == "Approved" ? "selected" : "")>Approved</option>
                <option value="Denied" @(ViewBag.StatusFilter == "Denied" ? "selected" : "")>Denied</option>
                <option value="Pending" @(ViewBag.StatusFilter == "Pending" ? "selected" : "")>Pending</option>
                <option value="Cancelled" @(ViewBag.StatusFilter == "Cancelled" ? "selected" : "")>Cancelled</option>
            </select>
            <button type="submit" class="btn btn-primary shadow-sm" style="border-radius: 8px;">
                <i class="bi bi-search me-1"></i>Search
            </button>
        </form>

        <a href="http://localhost:5000/Bookings/Create" class="btn btn-success shadow-sm" style="border-radius: 8px;">
            <i class="bi bi-plus-circle me-1"></i>Create Booking
        </a>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered table-hover shadow-sm">
            <thead class="table-dark">
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Room</th>
                    <th scope="col">Start Time</th>
                    <th scope="col">End Time</th>
                    <th scope="col">Purpose</th>
                    <th scope="col">Status</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model == null || Model.Count == 0)
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted py-3">No bookings found.</td>
                    </tr>
                }
                else
                {
                    foreach (var b in Model)
                    {
                        <tr>
                            <td>@b.BookingId</td>
                            <td>@(b.RoomSlots.FirstOrDefault()?.Room?.RoomName ?? "-")</td>
                            <td>@b.StartTime.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@b.EndTime.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@b.Purpose</td>
                            <td>
                                <span class="@(b.BookingStatus switch
                                {
                                    "Approved" => "text-success fw-bold",
                                    "Denied" => "text-danger fw-bold",
                                    "Pending" => "text-warning fw-bold",
                                    "Cancelled" => "text-muted fw-bold",
                                    _ => "text-secondary"
                                })">
                                    @b.BookingStatus
                                </span>
                            </td>
                            <td>
                                @if (b.BookingStatus == "Pending" || b.BookingStatus == "Approved")
                                {
                                    <form action="/Bookings/Cancel" method="post" style="display:inline;">
                                        <input type="hidden" name="id" value="@b.BookingId" />
                                        <input type="hidden" name="searchRoom" value="@ViewBag.SearchRoom" />
                                        <input type="hidden" name="searchPurpose" value="@ViewBag.SearchPurpose" />
                                        <input type="hidden" name="statusFilter" value="@ViewBag.StatusFilter" />
                                        <input type="hidden" name="pageNumber" value="@ViewBag.CurrentPage" />
                                        <button type="submit" class="btn btn-danger btn-sm shadow-sm" style="border-radius: 8px;"
                                                onclick="return confirm('Are you sure you want to cancel this booking?');">
                                            <i class="bi bi-x-circle me-1"></i>Cancel
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <span class="text-muted">N/A</span>
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between align-items-center mt-4">
        <div>
            <p class="text-muted">Page @ViewBag.CurrentPage of @ViewBag.TotalPages</p>
        </div>
        <div class="d-flex gap-2">
            @if (ViewBag.CurrentPage > 1)
            {
                <a href="@Url.Action("Index", new { searchRoom = ViewBag.SearchRoom, searchPurpose = ViewBag.SearchPurpose, statusFilter = ViewBag.StatusFilter, pageNumber = ViewBag.CurrentPage - 1 })"
                   class="btn btn-outline-secondary shadow-sm" style="border-radius: 8px;">
                    <i class="bi bi-arrow-left me-1"></i>Previous
                </a>
            }
            else
            {
                <button disabled class="btn btn-outline-secondary shadow-sm" style="border-radius: 8px;">
                    <i class="bi bi-arrow-left me-1"></i>Previous
                </button>
            }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <a href="@Url.Action("Index", new { searchRoom = ViewBag.SearchRoom, searchPurpose = ViewBag.SearchPurpose, statusFilter = ViewBag.StatusFilter, pageNumber = ViewBag.CurrentPage + 1 })"
                   class="btn btn-outline-secondary shadow-sm" style="border-radius: 8px;">
                    Next<i class="bi bi-arrow-right ms-1"></i>
                </a>
            }
            else
            {
                <button disabled class="btn btn-outline-secondary shadow-sm" style="border-radius: 8px;">
                    Next<i class="bi bi-arrow-right ms-1"></i>
                </button>
            }
        </div>
    </div>
</div>

@section Scripts {
    <!-- SignalR code is in Layout, so no duplicate code here -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const statusSpans = document.querySelectorAll("table tbody tr td span");
            statusSpans.forEach(function (span) {
                if (span.textContent.trim() === "Cancelled") {
                    span.style.setProperty("color", "orange", "important");
                    span.style.setProperty("font-weight", "bold", "important");
                }
            });
        });
    </script>

}
